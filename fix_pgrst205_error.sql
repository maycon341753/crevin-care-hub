-- Script para corrigir erro PGRST205: Could not find the table 'public.auth.users'
-- Este erro ocorre quando h√° refer√™ncias incorretas √† tabela auth.users no schema p√∫blico

-- 1. Verificar se existem pol√≠ticas RLS problem√°ticas
SELECT 
    'Verificando pol√≠ticas RLS que podem estar causando o erro PGRST205:' as status;

-- Listar todas as pol√≠ticas que fazem refer√™ncia a auth.users
SELECT 
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd,
    qual,
    with_check
FROM pg_policies 
WHERE qual LIKE '%auth.users%' OR with_check LIKE '%auth.users%'
ORDER BY schemaname, tablename;

-- 2. Verificar se a tabela profiles tem a coluna email
SELECT 
    'Verificando se a tabela profiles tem coluna email:' as status;

SELECT 
    column_name,
    data_type,
    is_nullable
FROM information_schema.columns 
WHERE table_schema = 'public' 
AND table_name = 'profiles' 
AND column_name = 'email';

-- 3. Adicionar coluna email se n√£o existir
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'public' 
        AND table_name = 'profiles' 
        AND column_name = 'email'
    ) THEN
        ALTER TABLE public.profiles ADD COLUMN email TEXT;
        RAISE NOTICE '‚úÖ Coluna email adicionada √† tabela profiles';
        
        -- Sincronizar emails existentes
        UPDATE public.profiles 
        SET email = auth_users.email
        FROM auth.users auth_users
        WHERE profiles.user_id = auth_users.id;
        
        RAISE NOTICE '‚úÖ Emails sincronizados com auth.users';
    ELSE
        RAISE NOTICE '‚ÑπÔ∏è Coluna email j√° existe na tabela profiles';
    END IF;
END $$;

-- 4. Verificar se existem triggers problem√°ticos
SELECT 
    'Verificando triggers que podem estar causando problemas:' as status;

SELECT 
    trigger_name,
    event_manipulation,
    event_object_table,
    action_statement
FROM information_schema.triggers 
WHERE trigger_schema = 'public'
AND action_statement LIKE '%auth.users%';

-- 5. Criar pol√≠tica RLS mais permissiva para profiles (tempor√°ria)
-- Remover pol√≠ticas existentes que podem estar causando problemas
DROP POLICY IF EXISTS "Usu√°rios podem ver seus pr√≥prios perfis" ON public.profiles;
DROP POLICY IF EXISTS "Usu√°rios podem atualizar seus pr√≥prios perfis" ON public.profiles;
DROP POLICY IF EXISTS "Usu√°rios podem inserir seus pr√≥prios perfis" ON public.profiles;

-- Criar pol√≠ticas mais permissivas temporariamente
CREATE POLICY "Allow all select on profiles" ON public.profiles
    FOR SELECT USING (true);

CREATE POLICY "Allow all insert on profiles" ON public.profiles
    FOR INSERT WITH CHECK (true);

CREATE POLICY "Allow all update on profiles" ON public.profiles
    FOR UPDATE USING (true);

-- 6. Verificar se o usu√°rio desenvolvedor existe
SELECT 
    'Verificando usu√°rio desenvolvedor:' as status;

SELECT 
    id,
    user_id,
    email,
    full_name,
    role,
    created_at
FROM public.profiles 
WHERE role = 'developer' OR email LIKE '%desenvolvedor%'
ORDER BY created_at DESC;

-- 7. Criar usu√°rio desenvolvedor se n√£o existir
DO $$
DECLARE
    dev_user_exists BOOLEAN;
BEGIN
    -- Verificar se j√° existe usu√°rio desenvolvedor
    SELECT EXISTS(
        SELECT 1 FROM public.profiles 
        WHERE role = 'developer'
    ) INTO dev_user_exists;
    
    IF NOT dev_user_exists THEN
        RAISE NOTICE '‚ö†Ô∏è Usu√°rio desenvolvedor n√£o encontrado!';
        RAISE NOTICE 'üìã Para criar o usu√°rio desenvolvedor:';
        RAISE NOTICE '1. V√° para Supabase Dashboard > Authentication > Users';
        RAISE NOTICE '2. Clique em "Add user"';
        RAISE NOTICE '3. Email: desenvolvedor@crevin.com.br';
        RAISE NOTICE '4. Password: Dev@2025';
        RAISE NOTICE '5. Execute: UPDATE public.profiles SET role = ''developer'' WHERE email = ''desenvolvedor@crevin.com.br'';';
    ELSE
        RAISE NOTICE '‚úÖ Usu√°rio desenvolvedor encontrado!';
    END IF;
END $$;

-- 8. Verificar status final
SELECT 
    'Status final da corre√ß√£o:' as status;

SELECT 
    'Total de usu√°rios na tabela profiles:' as info,
    COUNT(*) as total
FROM public.profiles;

SELECT 
    'Usu√°rios por role:' as info,
    role,
    COUNT(*) as total
FROM public.profiles 
GROUP BY role
ORDER BY role;

-- Mensagens finais
DO $$
BEGIN
    RAISE NOTICE '=== CORRE√á√ÉO DO ERRO PGRST205 CONCLU√çDA ===';
    RAISE NOTICE '‚úÖ Pol√≠ticas RLS tempor√°rias aplicadas';
    RAISE NOTICE '‚úÖ Coluna email verificada/adicionada';
    RAISE NOTICE '‚úÖ Verifica√ß√£o do usu√°rio desenvolvedor realizada';
    RAISE NOTICE 'üìã Teste a p√°gina de usu√°rios agora: http://localhost:4173/admin/usuarios';
END $$;